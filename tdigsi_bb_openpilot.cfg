[OP_CONFIG]
# user_handle: username at tinkla.us, for dashboard data and support. if you don't have a username, ask for one on discord, or just enter your discord handle here. (default: your_tinkla_username)
user_handle = tdigsi
# force_fingerprint_tesla: forces the fingerprint to tesla model s if openpilot fails to identify car via fingerprint. (default: false)
force_fingerprint_tesla = True
# uses_a_pillar_harness: enable when using the new a pillar harness. (default: false)
uses_a_pillar_harness = False
# force_pedal_over_cc: forces the use of tesla pedal over acc completely disabling the tesla cc. (default: false)
force_pedal_over_cc = False
# enable_hso: enables human steering override (hso) feature which allows you to take control of the steering wheel and correct the course of the car without disengaging openpilot lane keep assist (lks, lateral control). (default: true)
enable_hso = True
# enable_alca: enables the adaptive lane change assist (alca) feature which will automatically change lanes when driving above 18 mph (29 km/h) by just pushing 1/2 way on your turn signal stalk; turn signal will remain on for the duration of lane change. (default: true)
enable_alca = True
# enable_das_emulation: the secret sauce of ic/cid integration; this feature makes the panda generate all the can messages needed for ic/cid integration that mimic the ap interface. (default: false)
enable_das_emulation = True
# enable_radar_emulation: the secret sauce to make the tesla radar work; this feature makes the panda generate all the can messages needed by the tesla bosch radar to operate. (default: false)
enable_radar_emulation = True
# enable_driver_monitor: when turned off, the openpilot is tricked into thinking you have your hands on the sterring wheel all the time. (default: true)
enable_driver_monitor = False
# has_noctua_fan: enables control of noctua fan (at higher rpms) when you have a noctua fan installed on an offcial eon fan control module. (doesn't work for freons with noctua fans.) (default: false)
has_noctua_fan = False
# limit_battery_minmax: enables battery charging limits; the battery will start charging when battery percentage is below limit_battery_min and will stop charging when battery percentage is above limit_battery_max. (default: true)
limit_battery_minmax = True
# limit_battery_min: see limit_battery_minmax. (default: 60)
limit_battery_min = 60
# limit_battery_max: see limit_battery_minmax. (default: 80)
limit_battery_max = 80
# block_upload_while_tethering: this setting will block uploading op videos to comma when you are tethering through a phone or specified network address. you should set the tether_ip to the first 3 values that your phone provides as ip when you tether. this is phone/carrier specific. for example iphone addresses start with 172.20.10.x so you would enter 172.20.10. (default: false)
block_upload_while_tethering = False
# tether_ip: see block_upload_while_tethering. (default: 127.0.0.)
tether_ip = 127.0.0.
# use_tesla_gps: this setting forces op to use tesla gps data instead of the gps that comes with the gray panda; both gps systems use ublox and both are very close in accuracy; this also allows one to use a white panda and still have map integration. (default: false)
use_tesla_gps = False
# use_tesla_map_data: this setting (which requires root) allows op to use tesla navigation map data. (under development) (default: false)
use_tesla_map_data = False
# has_tesla_ic_integration: this setting (in conjunction with enable_radar_emulation) helps create the ic integration (default: false)
has_tesla_ic_integration = True
# use_tesla_radar: set this setting to true if you have a tesla bosch radar installed (works in conjunction with enable_radar_emulation). (default: false)
use_tesla_radar = True
# use_without_harness: not used at the moment; should be false. (default: false)
use_without_harness = False
# radar_vin: if you use an aftermarket tesla bosch radar that already has a coded vin, you will have to enter that vin value here. (default: "                 ")
radar_vin = 5YJSA1E29FF114367
# radar_offset: if your tesla bosch radar is not centered on the car, this value will allow to enter a correction offset. (default: 0)
radar_offset = 0.267
# radar_epas_type: depending on the source of your tesla bosch radar (older or newer model s or model x), this setting has to match what the radar was programmed to recognize as epas; values are between 0 and 4; finding the right one is trial and error. (default: 0)
radar_epas_type = 0
# radar_position: depending on the source of your tesla bosch radar (older or newer model s or model x), this setting has to match what the radar was programmed to have a position (model s, model s facelift, model x); values are between 0 and 3; finding the right one is trial and error. (default: 0)
radar_position = 0
# fix_1916: set this value to false if you are running tesla software earlier than v2019.16. this fixes the di_state can message change for di_cruiseset which changed in 2019.16 from 9 bits to 8 bits. (default: true)
fix_1916 = True
# do_auto_update: set this setting to false if you do not want op to autoupdate every time you reboot and there is a change on the repo. (default: true)
do_auto_update = True

[OP_PREFERENCES]
# spinner_text: here you can customize the text that is shown for the spinner when op is loading from boot. %d is the current loading percentage. (default: %d)
spinner_text = %d
# hso_numb_period: seconds to delay the reengagement of lkas after turn signal has been used. time starts when the turn signal is turned on. (default: 1.5)
hso_numb_period = 1.5
# enable_ldw: enable the lane departure warning (ldw) feature; this feature warns the driver if the car gets too close to one of the lane lines when driving above 35 mph (57 km/h) without touching the steering wheel or when the turn signal is off. (default: true)
enable_ldw = True
# ldw_numb_period: seconds to disable ldw after the blinker stops blinking. (default: 1.5)
ldw_numb_period = 1.5
# tap_blinker_extension: number of additional blinks when tapping the turn signal stalk. a value of 2 means 5 blinks total, because the car normally blinks 3 times. (default: 2)
tap_blinker_extension = 2
# enable_show_car: shows a tesla car in op's limited ui mode instead of the triangle that identifies the lead car; this is only used if you do not have ic/cid integration. (default: true)
enable_show_car = True
# enable_show_logo: shows a tesla red logo on the eon screen when op is not engaged. (default: true)
enable_show_logo = True
# ahb_off_duration: duration auto high beams (ahb) should be off after last detecting a vehicle. radar is required to use ahb. (default: 5)
ahb_off_duration = 5

[JETSON_PREFERENCES]
# jetson_road_camera_id: id of camera facing road, as seen in ls -al /dev/v4l/by-id (default: notset)
jetson_road_camera_id = NotSet
# jetson_driver_camera_id: id of camera facing driver, as seen in ls -al /dev/v4l/by-id (default: notset)
jetson_driver_camera_id = NotSet
# jetson_road_camera_fx: focal length correction factor to match the eon camera view window (default: 0.73)
jetson_road_camera_fx = 0.73
# jetson_driver_camera_fx: focal length correction factor to match the eon camera view window (default: 0.75)
jetson_driver_camera_fx = 0.75
# jetson_driver_camera_flip: flip the image for the driver camera (default: 0)
jetson_driver_camera_flip = 0
# jetson_road_camera_flip: flip the image for the road camera (default: 0)
jetson_road_camera_flip = 0
# jetson_monitor_forced_resolution: to use the pi 7" hdmi screen this has to be set to "-rez 800 480" (default: -rez 1280 720)
jetson_monitor_forced_resolution = -rez 1280 720

[LOGGING]
# should_log_can_errors: enable can error logging to tinkla (default: false)
should_log_can_errors = False
# should_log_process_comm_errors: enable process comm error logging to tinkla (default: false)
should_log_process_comm_errors = False
